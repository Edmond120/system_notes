Stack memory vs Heap memory

	Computer programs separate memory usage into two parts:
	stack and heap.

	Every program can have its own stack and heap.

	Stack memory
		Stores all normally declared variables (including pointers and structs), arrays and function calls;

		Functions are pushed onto the stack in the order they are called, and popped off when completed.
	
		When a function is popped off the stack, the stack memory associated with it is released.
	
	
	Heap memory
		Stores dynamically allocated memory.

		**Data will remain in the heap until it is released.**
			(or the program terminates)
	
		Can be accessed through pointers.
	
		Can be accessed accross many functions.
